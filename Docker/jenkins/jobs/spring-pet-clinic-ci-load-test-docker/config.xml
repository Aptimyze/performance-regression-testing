<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Continous integration build for spring-pet-clinic-microservices applications. The application is deployed and a JMeter Load Test is executed. When performance deviations are detected the build will fail. </description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>10</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>CMR_HOSTNAME</name>
          <description></description>
          <defaultValue>inspectit_cmr</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CMR_PORT</name>
          <description></description>
          <defaultValue>8182</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>INSPECTIT_AGENT_FOLDER</name>
          <description></description>
          <defaultValue>/inspectIT/agent</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SUT_HOST</name>
          <description></description>
          <defaultValue>localhost</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SUT_PORT</name>
          <description></description>
          <defaultValue>8080</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JMETER_USERS</name>
          <description></description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JMETER_LOOPCOUNT</name>
          <description></description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JMETER_RAMPUP</name>
          <description></description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JMETER_JMX</name>
          <description></description>
          <defaultValue>jmeter/pet_clinic_load_test.jmx</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>INFLUX_HOST</name>
          <description></description>
          <defaultValue>influxdb</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.6.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/inspectit-labs/spring-petclinic-microservices.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/inspectit</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
./start_all_with_inspectIT.sh &quot;$INSPECTIT_AGENT_FOLDER&quot; inspectit_cmr</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
jmeter -t &quot;$JMETER_JMX&quot; -n -JHOST=&quot;$SUT_HOST&quot; -JPORT=&quot;$SUT_PORT&quot; -JUSERS=2 -JRAMPUP=&quot;$JMETER_RAMPUP&quot; -JINFLUXDB_HOST=&quot;$INFLUX_HOST&quot; -JLOOPCOUNT=2</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
[ -e jmeter/pet_clinic_load_test_results.jtl ] &amp;&amp; rm jmeter/pet_clinic_load_test_results.jtl

storageName=RecordingForBuildNumber&quot;$BUILD_NUMBER&quot;
curl http://&quot;$CMR_HOSTNAME&quot;:&quot;$CMR_PORT&quot;/rest/storage/&quot;$storageName&quot;/create&gt;response.txt
response=$(cat response.txt)
storageId=&quot;${response:18:36}&quot;
echo &quot;$storageId&quot; &gt; storageId.txt

curl http://&quot;$CMR_HOSTNAME&quot;:&quot;$CMR_PORT&quot;/rest/storage/start?id=&quot;$storageId&quot;
jmeter -t &quot;$JMETER_JMX&quot; -n -l jmeter/pet_clinic_load_test_results.jtl -Jjmeter.save.saveservice.output_format=xml -JHOST=&quot;$SUT_HOST&quot; -JPORT=&quot;$SUT_PORT&quot; -JUSERS=&quot;$JMETER_USERS&quot; -JRAMPUP=&quot;$JMETER_RAMPUP&quot; -JINFLUXDB_HOST=&quot;$INFLUX_HOST&quot; -JLOOPCOUNT=&quot;$JMETER_LOOPCOUNT&quot;
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
storageId=$(&lt;storageId.txt)
curl http://&quot;$CMR_HOSTNAME&quot;:&quot;$CMR_PORT&quot;/rest/storage/stop</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.performance.PerformancePublisher plugin="performance@3.3">
      <errorFailedThreshold>-1</errorFailedThreshold>
      <errorUnstableThreshold>-1</errorUnstableThreshold>
      <errorUnstableResponseTimeThreshold></errorUnstableResponseTimeThreshold>
      <relativeFailedThresholdPositive>25.0</relativeFailedThresholdPositive>
      <relativeFailedThresholdNegative>50.0</relativeFailedThresholdNegative>
      <relativeUnstableThresholdPositive>15.0</relativeUnstableThresholdPositive>
      <relativeUnstableThresholdNegative>25.0</relativeUnstableThresholdNegative>
      <nthBuildNumber>0</nthBuildNumber>
      <configType>MRT</configType>
      <graphType>ART</graphType>
      <modeOfThreshold>true</modeOfThreshold>
      <failBuildIfNoResultFile>true</failBuildIfNoResultFile>
      <compareBuildPrevious>true</compareBuildPrevious>
      <optionType>ART</optionType>
      <xml></xml>
      <modePerformancePerTestCase>true</modePerformancePerTestCase>
      <excludeResponseTime>false</excludeResponseTime>
      <modeThroughput>true</modeThroughput>
      <modeEvaluation>false</modeEvaluation>
      <ignoreFailedBuilds>false</ignoreFailedBuilds>
      <ignoreUnstableBuilds>false</ignoreUnstableBuilds>
      <persistConstraintLog>false</persistConstraintLog>
      <sourceDataFiles>jmeter/pet_clinic_load_test_results.jtl</sourceDataFiles>
    </hudson.plugins.performance.PerformancePublisher>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.8">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>Performance</logText>
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>true</EscalateStatus>
          <RunIfJobSuccessful>true</RunIfJobSuccessful>
          <script>#!/bin/bash&#xd;
storageId=$(&lt;storageId.txt)&#xd;
curl http://&quot;$CMR_HOSTNAME&quot;:&quot;$CMR_PORT&quot;/rest/storage/&quot;$storageId&quot;/delete</script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>